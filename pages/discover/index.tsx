/**
* This code was generated by v0 by Vercel.
* @see https://v0.dev/t/96lzYL5vZOH
* Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
*/

/** Add fonts into your Next.js project:

import { Inter } from 'next/font/google'

inter({
  subsets: ['latin'],
  display: 'swap',
})

To read more about using these font, please visit the Next.js documentation:
- App Directory: https://nextjs.org/docs/app/building-your-application/optimizing/fonts
- Pages Directory: https://nextjs.org/docs/pages/building-your-application/optimizing/fonts
**/
import { DropdownMenu, DropdownMenuTrigger, DropdownMenuContent, DropdownMenuLabel, DropdownMenuSeparator, DropdownMenuItem } from "@/components/ui/dropdown-menu"
import { Button } from "@/components/ui/button"
import Link from "next/link"
import { Card, CardHeader, CardTitle, CardDescription, CardContent } from "@/components/ui/card"
import { CartesianGrid, XAxis, Bar, BarChart, Line, LineChart } from "recharts"
import { ChartTooltipContent, ChartTooltip, ChartContainer } from "@/components/ui/chart"
import AppLayout from "@/components/layouts/app"
import { CalendarIcon, ClipboardIcon, DatabaseIcon, InfoIcon } from "lucide-react"
import UserActivityChart from "@/components/charts/user-activity-chart"
import { GetServerSideProps } from "next"
import { generateChartData } from "@/lib/utils/generate-chart-data"
import { use } from "react"

const BlackOnPrimaryBgContainer = ({
    children,
}: {
    children: React.ReactNode;
}) => {
    return (
        <div className="bg-tremor-background-subtle rounded-full w-8 h-8 flex items-center justify-center foreground">
            {children}
        </div>
    );
}

export const getServerSideProps: GetServerSideProps = async () => {
    const chartData = generateChartData();
    return {
        props: {
            chartData,
        },
    };
};

const BackFromNowPicker = () => {
    return (
        <DropdownMenu>
            <DropdownMenuTrigger asChild>
                <Button variant="outline" size="sm" className="gap-1">
                    <CalendarIcon className="h-4 w-4" />
                    <span>Last 30 days</span>
                </Button>
            </DropdownMenuTrigger>
            <DropdownMenuContent align="end">
                <DropdownMenuLabel>Time Period</DropdownMenuLabel>
                <DropdownMenuSeparator />
                <DropdownMenuItem>Last 7 days</DropdownMenuItem>
                <DropdownMenuItem>Last 30 days</DropdownMenuItem>
                <DropdownMenuItem>Last 90 days</DropdownMenuItem>
                <DropdownMenuItem>Last 1 year</DropdownMenuItem>
            </DropdownMenuContent>
        </DropdownMenu>
    )
};

const skillTrends = [
    {
        name: "React.js",
        description: "Increased usage by 25% in the last month",
        icon: CodeIcon,
        userUpdates: 15,
    },
    {
        name: "Python",
        description: "New skill added by 15 users this week",
        icon: CodeIcon,
        userUpdates: 14,
    },
    {
        name: "SQL",
        description: "Increased usage by 12% in the last quarter",
        icon: DatabaseIcon,
        userUpdates: 11,
    },
    {
        name: "Figma",
        description: "New skill added by 8 users this week",
        icon: ClipboardIcon,
        userUpdates: 8,
    },
];

const topRoles = [
    {
        name: "Software Engineer",
        skillRequirements: [
            {
                skill: "Frontend",
                level: 1,
            },
            {
                skill: "Backend",
                level: 1,
            },
            {
                skill: "Data Modeling",
                level: 1,
            },
            {
                skill: "DevOps",
                level: 1,
            },
            {
                skill: "Agile",
                level: 1,
            }
        ]
    },
    {
        name: "Product Manager",
        skillRequirements: [
            {
                skill: "Agile",
                level: 1,
            },
            {
                skill: "Figma",
                level: 1,
            },
            {
                skill: "Google Analytics",
                level: 1,
            }
        ]
    },
    {
        name: "Data Analyst",
        skillRequirements: [
            {
                skill: "SQL",
                level: 2,
            },
            {
                skill: "Power BI",
                level: 1,
            },
            {
                skill: "Python",
                level: 1,
            },
            {
                skill: "Google Analytics",
                level: 1,
            }
        ]
    },
];


export default function Discover({ chartData }: { chartData: any }) {
    return (
        <AppLayout>
            <header className="flex items-center justify-between px-4 py-4 md:px-8 md:py-8">
                <div className="space-y-1">
                    <h2 className="text-xl font-semibold tracking-tight text-foreground sm:text-2xl">
                        Discover
                    </h2>
                    <p className="text-xs text-muted-foreground sm:text-sm">
                        View the latest trends and activities for your team.
                    </p>
                </div>
            </header>
            <main className="p-4 sm:mx-4 sm:mt-4 grid gap-8">
                <section>
                    <div className="flex items-center justify-between">
                        <h2 className="text-2xl font-bold">Trending Skill Updates</h2>
                        <div className="flex items-center gap-2">
                            <BackFromNowPicker />
                            {/* <Link href="#" className="hover:underline" prefetch={false}>
                                View all
                            </Link> */}
                        </div>
                    </div>
                    <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-4 mt-4">
                        {skillTrends.map((skill) => (
                            <Card key={skill.name}>
                                <CardHeader>
                                    <CardTitle>{skill.name}</CardTitle>
                                    <CardDescription>Added or updated by {skill.userUpdates} people.</CardDescription>
                                </CardHeader>
                                {/* <CardContent>
                                    <div className="flex items-center gap-2">
                                        <BlackOnPrimaryBgContainer>
                                            <skill.icon className="w-5 h-5" />
                                        </BlackOnPrimaryBgContainer>
                                        <div>
                                            <div className="font-medium">{skill.name}</div>
                                            <div className="text-sm text-muted-foreground">Frontend framework</div>
                                        </div>
                                    </div>
                                </CardContent> */}
                            </Card>
                        ))}
                    </div>
                </section>
                <section>
                    <div className="flex items-center justify-between">
                        <h2 className="text-2xl font-bold">Top Roles</h2>
                        <Link href="#" className="hover:underline" prefetch={false}>
                            View all
                        </Link>
                    </div>
                    <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4 mt-4">
                        {topRoles.
                            map((role) => (
                                <Card key={role.name}>
                                    <CardHeader>
                                        <CardTitle>{role.name}</CardTitle>
                                    </CardHeader>
                                    <CardContent>
                                        {role.skillRequirements
                                            .slice(0, 3)
                                            .map((skill, i) => (
                                                <div key={i} className="flex items-center justify-between gap-2 mt-2">
                                                    {/* <BlackOnPrimaryBgContainer>
                                                <CodeIcon className="w-5 h-5" />
                                            </BlackOnPrimaryBgContainer> */}
                                                    <div className="font-medium">{skill.skill}</div>
                                                    <div className="text-sm text-muted-foreground">Level {skill.level}</div>
                                                </div>
                                            ))}
                                        {role.skillRequirements.length > 3 && (
                                            <div className="mt-2">
                                                <Link href="#" className="text-muted-foreground hover:underline" prefetch={false}>
                                                    + {role.skillRequirements.length - 3} more
                                                </Link>
                                            </div>
                                        )}
                                    </CardContent>
                                </Card>
                            ))}
                    </div>
                    {/* <Card>
                            <CardHeader>
                                <CardTitle>Software Engineer</CardTitle>
                            </CardHeader>
                            <CardContent>
                                <div className="flex items-center gap-2">
                                    <BlackOnPrimaryBgContainer>
                                        <CodeIcon className="w-5 h-5" />
                                    </BlackOnPrimaryBgContainer>
                                    <div>
                                        <div className="font-medium">JavaScript</div>
                                        <div className="text-sm text-muted-foreground">Frontend framework</div>
                                    </div>
                                </div>
                                <div className="flex items-center gap-2 mt-2">
                                    <BlackOnPrimaryBgContainer>
                                        <DatabaseIcon className="w-5 h-5" />
                                    </BlackOnPrimaryBgContainer>
                                    <div>
                                        <div className="font-medium">SQL</div>
                                        <div className="text-sm text-muted-foreground">Query language</div>
                                    </div>
                                </div>
                                <div className="flex items-center gap-2 mt-2">
                                    <BlackOnPrimaryBgContainer>
                                        <CodeIcon className="w-5 h-5" />
                                    </BlackOnPrimaryBgContainer>
                                    <div>
                                        <div className="font-medium">Python</div>
                                        <div className="text-sm text-muted-foreground">Programming language</div>
                                    </div>
                                </div>
                            </CardContent>
                        </Card>
                        <Card>
                            <CardHeader>
                                <CardTitle>Product Manager</CardTitle>
                            </CardHeader>
                            <CardContent>
                                <div className="flex items-center gap-2">
                                    <BlackOnPrimaryBgContainer>
                                        <ClipboardIcon className="w-5 h-5" />
                                    </BlackOnPrimaryBgContainer>
                                    <div>
                                        <div className="font-medium">Agile</div>
                                        <div className="text-sm text-muted-foreground">Project management</div>
                                    </div>
                                </div>
                                <div className="flex items-center gap-2 mt-2">
                                    <BlackOnPrimaryBgContainer>
                                        <TypeIcon className="w-5 h-5" />
                                    </BlackOnPrimaryBgContainer>
                                    <div>
                                        <div className="font-medium">Figma</div>
                                        <div className="text-sm text-muted-foreground">Design tool</div>
                                    </div>
                                </div>
                                <div className="flex items-center gap-2 mt-2">
                                    <BlackOnPrimaryBgContainer>
                                        <InfoIcon className="w-5 h-5" />
                                    </BlackOnPrimaryBgContainer>
                                    <div>
                                        <div className="font-medium">Google Analytics</div>
                                        <div className="text-sm text-muted-foreground">Analytics tool</div>
                                    </div>
                                </div>
                            </CardContent>
                        </Card>
                        <Card>
                            <CardHeader>
                                <CardTitle>Data Analyst</CardTitle>
                            </CardHeader>
                            <CardContent>
                                <div className="flex items-center gap-2">
                                    <BlackOnPrimaryBgContainer>
                                        <DatabaseIcon className="w-5 h-5" />
                                    </BlackOnPrimaryBgContainer>
                                    <div>
                                        <div className="font-medium">SQL</div>
                                        <div className="text-sm text-muted-foreground">Query language</div>
                                    </div>
                                </div>
                                <div className="flex items-center gap-2 mt-2">
                                    <BlackOnPrimaryBgContainer>
                                        <InfoIcon className="w-5 h-5" />
                                    </BlackOnPrimaryBgContainer>
                                    <div>
                                        <div className="font-medium">Power BI</div>
                                        <div className="text-sm text-muted-foreground">Data visualization</div>
                                    </div>
                                </div>
                                <div className="flex items-center gap-2 mt-2">
                                    <BlackOnPrimaryBgContainer>
                                        <CodeIcon className="w-5 h-5" />
                                    </BlackOnPrimaryBgContainer>
                                    <div>
                                        <div className="font-medium">Python</div>
                                        <div className="text-sm text-muted-foreground">Programming language</div>
                                    </div>
                                </div>
                            </CardContent>
                        </Card> */}
                    {/* </div> */}
                </section>
                <section>
                    <h2 className="text-2xl font-bold">Skills Distribution</h2>
                    <div className="mt-4">
                        <UserActivityChart chartData={chartData} />
                    </div>
                </section>
                <section>
                    <div className="flex items-center justify-between">
                        <h2 className="text-2xl font-bold">Skills Distribution</h2>
                        <Link href="#" className="hover:underline" prefetch={false}>
                            View all
                        </Link>
                    </div>
                    <div className="grid grid-cols-1 md:grid-cols-2 gap-4 mt-4">
                        <Card>
                            <CardHeader>
                                <CardTitle>Skills Word Bubble</CardTitle>
                            </CardHeader>
                            <CardContent>
                                <BarchartChart className="w-full aspect-[4/3]" />
                            </CardContent>
                        </Card>
                        <Card>
                            <CardHeader>
                                <CardTitle>Skills Histogram</CardTitle>
                            </CardHeader>
                            <CardContent>
                                <LinechartChart className="w-full aspect-[4/3]" />
                            </CardContent>
                        </Card>
                    </div>
                </section>

            </main>
        </AppLayout >
    )
}

function BarchartChart(props: any) {
    return (
        <div {...props}>
            <ChartContainer
                config={{
                    desktop: {
                        label: "Desktop",
                        color: "hsl(var(--chart-1))",
                    },
                }}
                className="min-h-[300px]"
            >
                <BarChart
                    accessibilityLayer
                    data={[
                        { month: "January", desktop: 186 },
                        { month: "February", desktop: 305 },
                        { month: "March", desktop: 237 },
                        { month: "April", desktop: 73 },
                        { month: "May", desktop: 209 },
                        { month: "June", desktop: 214 },
                    ]}
                >
                    <CartesianGrid vertical={false} />
                    <XAxis
                        dataKey="month"
                        tickLine={false}
                        tickMargin={10}
                        axisLine={false}
                        tickFormatter={(value) => value.slice(0, 3)}
                    />
                    <ChartTooltip cursor={false} content={<ChartTooltipContent hideLabel />} />
                    <Bar dataKey="desktop" fill="var(--color-desktop)" radius={8} />
                </BarChart>
            </ChartContainer>
        </div>
    )
}




function CodeIcon(props: any) {
    return (
        <svg
            {...props}
            xmlns="http://www.w3.org/2000/svg"
            width="24"
            height="24"
            viewBox="0 0 24 24"
            fill="none"
            stroke="currentColor"
            strokeWidth="2"
            strokeLinecap="round"
            strokeLinejoin="round"
        >
            <polyline points="16 18 22 12 16 6" />
            <polyline points="8 6 2 12 8 18" />
        </svg>
    )
}


function LinechartChart(props: any) {
    return (
        <div {...props}>
            <ChartContainer
                config={{
                    desktop: {
                        label: "Desktop",
                        color: "hsl(var(--chart-1))",
                    },
                }}
            >
                <LineChart
                    accessibilityLayer
                    data={[
                        { month: "January", desktop: 186 },
                        { month: "February", desktop: 305 },
                        { month: "March", desktop: 237 },
                        { month: "April", desktop: 73 },
                        { month: "May", desktop: 209 },
                        { month: "June", desktop: 214 },
                    ]}
                    margin={{
                        left: 12,
                        right: 12,
                    }}
                >
                    <CartesianGrid vertical={false} />
                    <XAxis
                        dataKey="month"
                        tickLine={false}
                        axisLine={false}
                        tickMargin={8}
                        tickFormatter={(value) => value.slice(0, 3)}
                    />
                    <ChartTooltip cursor={false} content={<ChartTooltipContent hideLabel />} />
                    <Line dataKey="desktop" type="natural" stroke="var(--color-desktop)" strokeWidth={2} dot={false} />
                </LineChart>
            </ChartContainer>
        </div>
    )
}


function TypeIcon(props: any) {
    return (
        <svg
            {...props}
            xmlns="http://www.w3.org/2000/svg"
            width="24"
            height="24"
            viewBox="0 0 24 24"
            fill="none"
            stroke="currentColor"
            strokeWidth="2"
            strokeLinecap="round"
            strokeLinejoin="round"
        >
            <polyline points="4 7 4 4 20 4 20 7" />
            <line x1="9" x2="15" y1="20" y2="20" />
            <line x1="12" x2="12" y1="4" y2="20" />
        </svg>
    )
}
